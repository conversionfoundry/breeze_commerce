- classes = ' status-shipping-' + order.shipping_status.name.parameterize.underscore
- classes += ' status-billing-' + order.billing_status.name.parameterize.underscore

= content_tag :tr, :class => "order" + classes, :id => "order_#{order.id}", :"data-id" => order.id do
  - date = order.transaction_completed_at
  %td.date.first
    - if date
      %p.date
        %span.day
          = date.strftime("%d")
        %span.month
          = date.strftime("%B")
        %span.year
          = date.strftime("%Y")
      %p.time
        = date.strftime("%H:%M")
    - else
      Transaction not completed
  %td.total
    %p.total
      = number_to_currency(order.total, :locale => :nz)
      %span.currency
        = store.currency
  %td.customer
    %p.customer
      - if order.customer
        = link_to order.customer.name, edit_admin_store_customer_path(order.customer)
      = order.email
  %td.shipping
    = html_address(order.shipping_address) if order.shipping_address
  %td.line_items
    %ul.line_items
      - order.line_items.unarchived.each do |line_item|
        = line_item_string(line_item)

  %td.shipping_status
    .status
      = form_for order, :as => :order, :url => admin_store_order_path(order), :remote => true do |form|
        = form.select :shipping_status_id, @shipping_statuses.map{|s| [ s.name, s.id]}, {}, {:"data-order_id" => order.id, id: 'shipping_status_' + order.id, class: 'shipping_status status', label: false}
  %td.billing_status
    .status
      = form_for order, :as => :order, :url => admin_store_order_path(order), :remote => true do |form|
        = form.select :billing_status_id, @billing_statuses.map{|s| [ s.name, s.id]}, {disabled: [ Breeze::Commerce::OrderStatus.where(name: 'Browsing').first.id, Breeze::Commerce::OrderStatus.where(name: 'Started Checkout').first.id ]}, {:"data-order_id" => order.id, id: 'shipping_status_' + order.id, class: 'billing_status status', label: false}
  %td.actions.last
    %p.order-actions
      = link_to "Edit", edit_admin_store_order_path(order), :class => "small black button"
      = link_to "Delete", admin_store_order_path(order, :format => :js), :method => :delete, :remote => true, :class => "small red delete button"
#order-edit
  = breeze_form_for @order, :as => :order, :url => url do |form|
    .actions
      = submit_tag "Save", :class => "large green save button"
      = link_to "Delete", admin_store_order_path(@order, :format => :js), :method => :delete, :remote => true, :class => "large red delete button" unless @order.new_record?
    .form-body
      %h1= @order.new_record? ? 'New Order' : "Editing Order "
      = render "/breeze/admin/shared/error_messages", :target => @order, :object_name => :order
      #order-customer.section
        .customer
          - if @order.customer
            = render :partial => "breeze/admin/commerce/customers/card", :locals => {:customer => @order.customer}
          - else
            %p.customer-name
              %span.name
                Guest
            %ul.customer-contact
              %li.phone
                = @order.billing_address.phone if @order.billing_address
              %li.email
                = @order.email
          .change_customer
            = form.label :customer_id, @order.customer ? "Change customer for this order" : "Set customer for this order"
            = form.select :customer_id, Breeze::Commerce::Customer.unarchived.map {|c|[ c.name, c.id ] }, { :include_blank => 'None', :label => false}
      #order-details
        %h3#order-number
          Order number:
          \#{@order.order_number}

        - unless @order.new_record?
          #order-customer_comment
            = @order.comment
          #order-notes
            = render :partial => "breeze/admin/commerce/notes/notes", :object => @order.notes
        - unless @order.new_record?
          = form.fieldset class: 'line_items' do
            #order-line_items.section
              = render :partial => "breeze/admin/commerce/line_items/line_items", :object => @order.line_items.unarchived, :locals => { :form => form }
              = link_to "New line item", new_admin_store_order_line_item_path(@order), :class => "large green button new line_item"
        #order-shipping_billing.section
          #order-shipping
            %ol.form.status
              = form.select :shipping_status_id, @shipping_statuses.map{|s| [ s.name, s.id]}, {}, {:"data-status_id" => @order.id, :class => 'shipping_status status', :label => false}
            = form.fields_for :shipping_address, @order.shipping_address do |ship_form|
              %fieldset.address-shipping.address
                %legend Shipping Address
                %ol#order_shipping_address.form
                  = ship_form.text_field :name, :class => :required
                  = ship_form.text_area :address, :class => :required, :rows => 2
                  = ship_form.text_field :city, :class => :required, :class => 'input-medium'
                  = ship_form.text_field :state, :class => 'input-medium', :label => 'State, Province or Region'
                  = ship_form.text_field :postcode, :class => 'input-small'
                  = ship_form.select :country, options_for_select(@countries.map{|country| country.name}, @order.shipping_address.country || store.default_country.name), :class => :required
                  = ship_form.text_field :phone, :class => 'input-medium', :label => 'Contact Phone Number'
          #order-billing
            %ol.form.status
              = form.select :billing_status_id, @billing_statuses.map{|s| [ s.name, s.id]}, {}, {:"data-status_id" => @order.id, :class => 'billing_status status', :label => false}
            = form.fields_for :billing_address, @order.billing_address do |bill_form|
              %fieldset.address-billing.address
                %legend Billing Address
                %ol#order_billing_address.form
                  = bill_form.label :same do |label|
                    = check_box_tag :same, :same, true
                    Same as my Shipping Address
                  = bill_form.text_field :name, :class => :required
                  = bill_form.text_area :address, :class => :required, :rows => 2
                  = bill_form.text_field :city, :class => :required, :class => 'input-medium'
                  = bill_form.text_field :state, :class => 'input-medium', :label => 'State, Province or Region'
                  = bill_form.text_field :postcode, :class => 'input-small'
                  = bill_form.select :country, options_for_select(@countries.map{|country| country.name}, @order.billing_address.country || store.default_country.name), :class => :required
                  = bill_form.text_field :phone, :class => 'input-medium', :label => 'Contact Phone Number'

        .clearer
